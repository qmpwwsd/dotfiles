# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

########### my changes to mappings

[[manager.prepend_keymap]]
on = [ "n" ]
run = "plugin relative-motions"
desc = "Trigger vim motion"

# enable smart-enter
[[manager.prepend_keymap]]
on = ["<Enter>"]
run = "plugin smart-enter"
desc = "Enter the child directory, or open the file"

# set arrow keys to wrap
[[manager.prepend_keymap]]
on = ["<Up>"]
run = "plugin arrow -1"

[[manager.prepend_keymap]]
on = ["<Down>"]
run = "plugin arrow 1"

# esc in input field exits instead of changing vi mode
[[input.prepend_keymap]]
on = ["<Esc>"]
run = "close"
desc = "Cancel input"

[[manager.prepend_keymap]]
# map to drop to shell - special prompt set in .bashrc
on = ["<C-s>"]
run = 'shell "$SHELL" --block --confirm'
desc = "Open shell here"

# for bookmarks plugin
[[manager.prepend_keymap]]
on = ["b"]
run = "plugin bookmarks-persistence --args=save"
desc = "Save current position as a bookmark"

[[manager.prepend_keymap]]
on = ["\\"]
run = "plugin bookmarks-persistence --args=jump"
desc = "Jump to a bookmark"

[[manager.prepend_keymap]]
on = ["B", "d"]
run = "plugin bookmarks-persistence --args=delete"
desc = "Delete a bookmark"

[[manager.prepend_keymap]]
on = ["B", "D"]
run = "plugin bookmarks-persistence --args=delete_all"
desc = "Delete all bookmarks"

[[manager.prepend_keymap]]
on  = [ "m", "m" ]
run = "plugin max-preview"
desc = "Toggle maximize preview"

[[manager.prepend_keymap]]
on   = ["m", "h"]
run  = "plugin hide-preview"
desc = "Hide or show preview"

[[manager.prepend_keymap]]
on = ["p", "p"]
run = "plugin smart-paste"
desc = "Paste"

[[manager.prepend_keymap]]
on = ["p", "O"]
run = "plugin smart-paste-overwrite"
desc = "Paste overwrite"

[[manager.prepend_keymap]]
on = ["<Esc>"]
run = "plugin smart-escape"

[[manager.prepend_keymap]]
on   = "f"
run  = "plugin jump-to-char"
desc = "Jump to char"

[[manager.prepend_keymap]]
on   = [ "g", "i" ]
run  = "plugin lazygit"
desc = "Lazygit"

############### end my changes

[manager]

keymap = [
	# create zip file with selected files - does not work with directories
	{ on = [
		"c",
		"z",
	], run = """ shell 'printf "Zip name: "; read name; zip -j "$name.zip" "$@"' --block --confirm """, desc = "Create zip in current dir" },
	# { on = [ "c", "z" ], run = 'shell --block --confirm xarchiver', desc = "Create zip in current dir" },
	{ on = [
		"<Esc>",
	], run = "escape", desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = [
		"<C-[>",
	], run = "escape", desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = [
		"q",
	], run = "quit", desc = "Exit the process" },
	{ on = [
		"<F10>",
	], run = "quit", desc = "Exit the process" },
	{ on = [
		"Q",
	], run = "quit --no-cwd-file", desc = "Exit the process without writing cwd-file" },
	{ on = [
		"<C-q>",
	], run = "close", desc = "Close the current tab, or quit if it is last tab" },
	{ on = [
		"<C-w>",
	], run = "close", desc = "Close the current tab, or quit if it is last tab" },
	{ on = [
		"<C-z>",
	], run = "suspend", desc = "Suspend the process" },

	# Navigation
	{ on = [
		"k",
	], run = "arrow -1", desc = "Move cursor up" },
	{ on = [
		"j",
	], run = "arrow 1", desc = "Move cursor down" },

	{ on = [
		"K",
	], run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = [
		"J",
	], run = "arrow 5", desc = "Move cursor down 5 lines" },

	{ on = [
		"<S-Up>",
	], run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = [
		"<S-Down>",
	], run = "arrow 5", desc = "Move cursor down 5 lines" },

	{ on = [
		"<C-u>",
	], run = "arrow -50%", desc = "Move cursor up half page" },
	{ on = [
		"<C-d>",
	], run = "arrow 50%", desc = "Move cursor down half page" },
	{ on = [
		"<C-b>",
	], run = "arrow -100%", desc = "Move cursor up one page" },
	{ on = [
		"<C-f>",
	], run = "arrow 100%", desc = "Move cursor down one page" },

	{ on = [
		"<C-PageUp>",
	], run = "arrow -50%", desc = "Move cursor up half page" },
	{ on = [
		"<C-PageDown>",
	], run = "arrow 50%", desc = "Move cursor down half page" },
	{ on = [
		"<PageUp>",
	], run = "arrow -100%", desc = "Move cursor up one page" },
	{ on = [
		"<PageDown>",
	], run = "arrow 100%", desc = "Move cursor down one page" },

	{ on = [
		"h",
	], run = "leave", desc = "Go back to the parent directory" },
	{ on = [
		"l",
	], run = "enter", desc = "Enter the child directory" },

	{ on = [
		"H",
	], run = "back", desc = "Go back to the previous directory" },
	{ on = [
		"L",
	], run = "forward", desc = "Go forward to the next directory" },

	{ on = [
		"<A-k>",
	], run = "seek -5", desc = "Seek up 5 units in the preview" },
	{ on = [
		"<A-j>",
	], run = "seek 5", desc = "Seek down 5 units in the preview" },
	{ on = [
		"<A-PageUp>",
	], run = "seek -5", desc = "Seek up 5 units in the preview" },
	{ on = [
		"<A-PageDown>",
	], run = "seek 5", desc = "Seek down 5 units in the preview" },

	{ on = [
		"<Up>",
	], run = "arrow -1", desc = "Move cursor up" },
	{ on = [
		"<Down>",
	], run = "arrow 1", desc = "Move cursor down" },
	{ on = [
		"<Left>",
	], run = "leave", desc = "Go back to the parent directory" },
	{ on = [
		"<Right>",
	], run = "enter", desc = "Enter the child directory" },

	{ on = [
		"g",
		"g",
	], run = "arrow top", desc = "Go to top" },
	{ on = [
		"G",
	], run = "arrow bot", desc = "Go to bottom" },

	# Selection
	{ on = [
		"<Space>",
	], run = [
		"toggle --state=none",
		"arrow 1",
	], desc = "Toggle the current selection state" },
	{ on = [
		"v",
	], run = "visual_mode", desc = "Enter visual mode (selection mode)" },
	{ on = [
		"V",
	], run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },
	{ on = [
		"<C-a>",
	], run = "toggle_all --state=true", desc = "Select all files" },
	{ on = [
		"<C-r>",
	], run = "toggle_all --state=none", desc = "Inverse selection of all files" },

	# Operation
	{ on = [
		"o",
	], run = "open", desc = "Open the selected files" },
	{ on = [
		"O",
	], run = "open --interactive", desc = "Open the selected files interactively" },
	{ on = [
		"<Enter>",
	], run = "open", desc = "Open the selected files" },
	{ on = [
		"<S-Enter>",
	], run = "open --interactive", desc = "Open the selected files interactively" },
	{ on = [
		"y",
		"y",
	], run = "yank", desc = "Copy the selected files" },
	{ on = [
		"Y",
	], run = "unyank", desc = "Cancel the yank status of files" },
	{ on = [
		"d",
		"d",
	], run = "yank --cut", desc = "Cut files" },
	{ on = [
		"X",
	], run = "unyank", desc = "Cancel the yank status of files" },
	# { on = [ "p", "p" ],         run = "paste",                      desc = "Paste the files" },
	# { on = [ "p", "O" ],         run = "paste --force",              desc = "Paste the files (overwrite if the destination exists)" },
	{ on = [
		"-",
	], run = "link", desc = "Symlink the absolute path of files" },
	{ on = [
		"_",
	], run = "link --relative", desc = "Symlink the relative path of files" },
	{ on = [
		"d",
		"T",
	], run = "remove", desc = "Trash file" },
	{ on = [
		"d",
		"D",
	], run = "remove --permanently", desc = "Perm delete" },
	{ on = [
		"a",
	], run = "create", desc = "Create a file or directory (ends with / for directories)" },
	{ on = [
		"r",
	], run = "rename --cursor=before_ext", desc = "Rename a file or directory" },
	{ on = [
		";",
	], run = "shell", desc = "Run a shell command" },
	{ on = [
		":",
	], run = "shell --block", desc = "Run a shell command (block the UI until the command finishes)" },
	{ on = [
		".",
	], run = "hidden toggle", desc = "Toggle the visibility of hidden files" },
	{ on = [
		"s",
	], run = "search fd", desc = "Search files by name using fd" },
	{ on = [
		"S",
	], run = "search rg", desc = "Search files by content using ripgrep" },
	{ on = [
		"<C-s>",
	], run = "search none", desc = "Cancel the ongoing search" },
	{ on = [
		"z",
	], run = "plugin zoxide", desc = "Jump to a directory using zoxide" },
	{ on = [
		"Z",
	], run = "plugin fzf", desc = "Jump to a directory, or reveal a file using fzf" },

	# Linemode
	{ on = [
		"m",
		"s",
	], run = "linemode size", desc = "Linemode size" },
	{ on = [
		"m",
		"p",
	], run = "linemode permissions", desc = "Linemode permissions" },
	{ on = [
		"m",
		"t",
	], run = "linemode mtime", desc = "Linemode mtime" },
	{ on = [
		"m",
		"n",
	], run = "linemode none", desc = "Linemode none" },

	# Copy
	{ on = [
		"c",
		"c",
	], run = "copy path", desc = "Copy abs path" },
	{ on = [
		"c",
		"d",
	], run = "copy dirname", desc = "Copy path (dir)" },
	{ on = [
		"c",
		"f",
	], run = "copy filename", desc = "Copy name" },
	{ on = [
		"c",
		"n",
	], run = "copy name_without_ext", desc = "Copy name (no ext)" },

	# Filter
	{ on = [
		"F",
	], run = "filter --smart", desc = "Filter files" },

	# Find
	{ on = [
		"/",
	], run = "find --smart", desc = "Find next" },
	{ on = [
		"?",
	], run = "find --previous --smart", desc = "Find previous" },
	{ on = [
		"n",
	], run = "find_arrow", desc = "Next found file" },
	{ on = [
		"N",
	], run = "find_arrow --previous", desc = "Previous found file" },

	# Sorting
	{ on = [
		",",
		"m",
	], run = "sort modified", desc = "Sort mtime" },
	{ on = [
		",",
		"M",
	], run = "sort modified --reverse", desc = "Sort mtime (rev)" },
	{ on = [
		",",
		"c",
	], run = "sort created", desc = "Sort ctime" },
	{ on = [
		",",
		"C",
	], run = "sort created --reverse", desc = "Sort ctime (rev)" },
	{ on = [
		",",
		"e",
	], run = "sort extension", desc = "Sort ext" },
	{ on = [
		",",
		"E",
	], run = "sort extension --reverse", desc = "Sort ext (rev)" },
	{ on = [
		",",
		"a",
	], run = "sort alphabetical --dir-first", desc = "Sort alpha" },
	{ on = [
		",",
		"A",
	], run = "sort alphabetical --reverse", desc = "Sort alpha (rev)" },
	{ on = [
		",",
		"n",
	], run = "sort natural --dir-first", desc = "Sort natural" },
	{ on = [
		",",
		"N",
	], run = "sort natural --reverse", desc = "Sort natural (rev)" },
	{ on = [
		",",
		"s",
	], run = "sort size", desc = "Sort size" },
	{ on = [
		",",
		"S",
	], run = "sort size --reverse", desc = "Sort size (rev)" },

	# Tabs

	# create new tab
	{ on = [
		"t",
		"c",
	], run = [
		"tab_create",
	], desc = "Create tab" },

	{ on = [
		"1",
	], run = "tab_switch 0", desc = "Switch to the first tab" },
	{ on = [
		"2",
	], run = "tab_switch 1", desc = "Switch to the second tab" },
	{ on = [
		"3",
	], run = "tab_switch 2", desc = "Switch to the third tab" },
	{ on = [
		"4",
	], run = "tab_switch 3", desc = "Switch to the fourth tab" },
	{ on = [
		"5",
	], run = "tab_switch 4", desc = "Switch to the fifth tab" },
	{ on = [
		"6",
	], run = "tab_switch 5", desc = "Switch to the sixth tab" },
	{ on = [
		"7",
	], run = "tab_switch 6", desc = "Switch to the seventh tab" },
	{ on = [
		"8",
	], run = "tab_switch 7", desc = "Switch to the eighth tab" },
	{ on = [
		"9",
	], run = "tab_switch 8", desc = "Switch to the ninth tab" },

	{ on = [
		"[",
	], run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
	{ on = [
		"]",
	], run = "tab_switch 1 --relative", desc = "Switch to the next tab" },

	{ on = [
		"{",
	], run = "tab_swap -1", desc = "Swap the current tab with the previous tab" },
	{ on = [
		"}",
	], run = "tab_swap 1", desc = "Swap the current tab with the next tab" },

	# Tasks
	{ on = [
		"w",
	], run = "tasks_show", desc = "Show the tasks manager" },

	# Goto
	{ on = [
		"g",
		"<Space>",
	], run = "cd --interactive", desc = "Enter dir" },
	# replaced by bookmarks-persistence
	{ on = [ "g", "n" ],       run = "cd ~/nixos",      desc = "nixos" },
	{ on = [ "g", "c" ],       run = "cd ~/.config",      desc = ".config" },
	{ on = [ "g", "d" ],       run = "cd ~/.Download",    desc = "Downloads" },
	{ on = [ "g", "h" ],       run = "cd ~",              desc = "Home" },
	# { on = [ "g", "o" ],       run = "cd ~/OneDrive",     desc = "OneDrive" },
	{ on = [ "g", "t" ],       run = "cd ~/.Temp",        desc = "temp" },
	# { on = [ "g", "v" ],       run = "cd ~/GDrive",       desc = "Google Drive" },
	# { on = [ "g", "y" ],       run = "cd ~/.config/yazi", desc = "yazi" },

	# Help
	{ on = [
		"~",
	], run = "help", desc = "Open help" },
]

[tasks]

keymap = [
	{ on = [
		"<Esc>",
	], run = "close", desc = "Hide the task manager" },
	{ on = [
		"<C-[>",
	], run = "close", desc = "Hide the task manager" },
	{ on = [
		"<C-q>",
	], run = "close", desc = "Hide the task manager" },
	{ on = [
		"w",
	], run = "close", desc = "Hide the task manager" },

	{ on = [
		"k",
	], run = "arrow -1", desc = "Move cursor up" },
	{ on = [
		"j",
	], run = "arrow 1", desc = "Move cursor down" },

	{ on = [
		"<Up>",
	], run = "arrow -1", desc = "Move cursor up" },
	{ on = [
		"<Down>",
	], run = "arrow 1", desc = "Move cursor down" },

	{ on = [
		"<Enter>",
	], run = "inspect", desc = "Inspect the task" },
	{ on = [
		"x",
	], run = "cancel", desc = "Cancel the task" },

	{ on = [
		"~",
	], run = "help", desc = "Open help" },
]

[select]

keymap = [
	{ on = [
		"<Esc>",
	], run = "close", desc = "Cancel selection" },
	{ on = [
		"<C-[>",
	], run = "close", desc = "Cancel selection" },
	{ on = [
		"<C-q>",
	], run = "close", desc = "Cancel selection" },
	{ on = [
		"<Enter>",
	], run = "close --submit", desc = "Submit the selection" },

	{ on = [
		"k",
	], run = "arrow -1", desc = "Move cursor up" },
	{ on = [
		"j",
	], run = "arrow 1", desc = "Move cursor down" },

	{ on = [
		"K",
	], run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = [
		"J",
	], run = "arrow 5", desc = "Move cursor down 5 lines" },

	{ on = [
		"<Up>",
	], run = "arrow -1", desc = "Move cursor up" },
	{ on = [
		"<Down>",
	], run = "arrow 1", desc = "Move cursor down" },

	{ on = [
		"<S-Up>",
	], run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = [
		"<S-Down>",
	], run = "arrow 5", desc = "Move cursor down 5 lines" },

	{ on = [
		"~",
	], run = "help", desc = "Open help" },
]

[input]

keymap = [
	{ on = [
		"<C-q>",
	], run = "close", desc = "Cancel input" },
	{ on = [
		"<Enter>",
	], run = "close --submit", desc = "Submit the input" },
	{ on = [
		"<Esc>",
	], run = "escape", desc = "Go back the normal mode, or cancel input" },
	{ on = [
		"<C-[>",
	], run = "escape", desc = "Go back the normal mode, or cancel input" },

	# Mode
	{ on = [
		"i",
	], run = "insert", desc = "Enter insert mode" },
	{ on = [
		"a",
	], run = "insert --append", desc = "Enter append mode" },
	{ on = [
		"I",
	], run = [
		"move -999",
		"insert",
	], desc = "Move to the BOL, and enter insert mode" },
	{ on = [
		"A",
	], run = [
		"move 999",
		"insert --append",
	], desc = "Move to the EOL, and enter append mode" },
	{ on = [
		"v",
	], run = "visual", desc = "Enter visual mode" },
	{ on = [
		"V",
	], run = [
		"move -999",
		"visual",
		"move 999",
	], desc = "Enter visual mode and select all" },

	# Character-wise movement
	{ on = [
		"h",
	], run = "move -1", desc = "Move back a character" },
	{ on = [
		"l",
	], run = "move 1", desc = "Move forward a character" },
	{ on = [
		"<Left>",
	], run = "move -1", desc = "Move back a character" },
	{ on = [
		"<Right>",
	], run = "move 1", desc = "Move forward a character" },
	{ on = [
		"<C-b>",
	], run = "move -1", desc = "Move back a character" },
	{ on = [
		"<C-f>",
	], run = "move 1", desc = "Move forward a character" },

	# Word-wise movement
	{ on = [
		"b",
	], run = "backward", desc = "Move back to the start of the current or previous word" },
	{ on = [
		"w",
	], run = "forward", desc = "Move forward to the start of the next word" },
	{ on = [
		"e",
	], run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },
	{ on = [
		"<A-b>",
	], run = "backward", desc = "Move back to the start of the current or previous word" },
	{ on = [
		"<A-f>",
	], run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },

	# Line-wise movement
	{ on = [
		"0",
	], run = "move -999", desc = "Move to the BOL" },
	{ on = [
		"$",
	], run = "move 999", desc = "Move to the EOL" },
	{ on = [
		"<C-a>",
	], run = "move -999", desc = "Move to the BOL" },
	{ on = [
		"<C-e>",
	], run = "move 999", desc = "Move to the EOL" },
	{ on = [
		"<Home>",
	], run = "move -999", desc = "Move to the BOL" },
	{ on = [
		"<End>",
	], run = "move 999", desc = "Move to the EOL" },

	# Delete
	{ on = [
		"<Backspace>",
	], run = "backspace", desc = "Delete the character before the cursor" },
	{ on = [
		"<Delete>",
	], run = "backspace --under", desc = "Delete the character under the cursor" },
	{ on = [
		"<C-h>",
	], run = "backspace", desc = "Delete the character before the cursor" },
	{ on = [
		"<C-d>",
	], run = "backspace --under", desc = "Delete the character under the cursor" },

	# Kill
	{ on = [
		"<C-u>",
	], run = "kill bol", desc = "Kill backwards to the BOL" },
	{ on = [
		"<C-k>",
	], run = "kill eol", desc = "Kill forwards to the EOL" },
	# { on = [ "<C-w>" ], run = "kill backward", desc = "Kill backwards to the start of the current word" },
	{ on = [
		"<A-d>",
	], run = "kill forward", desc = "Kill forwards to the end of the current word" },

	# Cut/Yank/Paste
	{ on = [
		"d",
	], run = "delete --cut", desc = "Cut characters" },
	{ on = [
		"D",
	], run = [
		"delete --cut",
		"move 999",
	], desc = "Cut until the EOL" },
	{ on = [
		"c",
	], run = "delete --cut --insert", desc = "Cut the selected characters, and enter insert mode" },
	{ on = [
		"C",
	], run = [
		"delete --cut --insert",
		"move 999",
	], desc = "Cut until the EOL, and enter insert mode" },
	{ on = [
		"x",
	], run = [
		"delete --cut",
		"move 1 --in-operating",
	], desc = "Cut the current character" },
	{ on = [
		"y",
	], run = "yank", desc = "Copy the selected characters" },
	{ on = [
		"p",
	], run = "paste", desc = "Paste the copied characters after the cursor" },
	{ on = [
		"P",
	], run = "paste --before", desc = "Paste the copied characters before the cursor" },

	# Undo/Redo
	{ on = [
		"u",
	], run = "undo", desc = "Undo the last operation" },
	{ on = [
		"<C-r>",
	], run = "redo", desc = "Redo the last operation" },

	# Help
	{ on = [
		"~",
	], run = "help", desc = "Open help" },
]

[completion]

keymap = [
	{ on = [
		"<C-q>",
	], run = "close", desc = "Cancel completion" },
	{ on = [
		"<Tab>",
	], run = "close --submit", desc = "Submit the completion" },
	{ on = [
		"<Enter>",
	], run = [
		"close --submit",
		"close_input --submit",
	], desc = "Submit the completion and input" },

	{ on = [
		"<A-k>",
	], run = "arrow -1", desc = "Move cursor up" },
	{ on = [
		"<A-j>",
	], run = "arrow 1", desc = "Move cursor down" },

	{ on = [
		"<Up>",
	], run = "arrow -1", desc = "Move cursor up" },
	{ on = [
		"<Down>",
	], run = "arrow 1", desc = "Move cursor down" },

	{ on = [
		"<C-p>",
	], run = "arrow -1", desc = "Move cursor up" },
	{ on = [
		"<C-n>",
	], run = "arrow 1", desc = "Move cursor down" },

	{ on = [
		"~",
	], run = "help", desc = "Open help" },
]

[help]

keymap = [
	{ on = [
		"<Esc>",
	], run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = [
		"<C-[>",
	], run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = [
		"q",
	], run = "close", desc = "Exit the process" },
	{ on = [
		"<C-q>",
	], run = "close", desc = "Hide the help" },

	# Navigation
	{ on = [
		"k",
	], run = "arrow -1", desc = "Move cursor up" },
	{ on = [
		"j",
	], run = "arrow 1", desc = "Move cursor down" },

	{ on = [
		"K",
	], run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = [
		"J",
	], run = "arrow 5", desc = "Move cursor down 5 lines" },

	{ on = [
		"<Up>",
	], run = "arrow -1", desc = "Move cursor up" },
	{ on = [
		"<Down>",
	], run = "arrow 1", desc = "Move cursor down" },

	{ on = [
		"<S-Up>",
	], run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = [
		"<S-Down>",
	], run = "arrow 5", desc = "Move cursor down 5 lines" },

	# Filtering
	{ on = [
		"/",
	], run = "filter", desc = "Apply a filter for the help items" },
]
